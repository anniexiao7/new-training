internet - (WAN - worldwide area network) global computer network (billlions of device connected)
	Wireline : copper/fiber - physical wireline / cable
	Wireless : satelites (NOT wifi)
	
	Home : (modem/router) physically connected to the wireline n/w
		TV, Laptop, phone,refrigeerator, thermostat, vaccum
		wifi - small distance(meters) wireless network
			connected to your modem/router
	Roaming : data plan on mobile
	
intranet - corporate/school computer network. (thousands of devices connected)
	unlimited communication within this walled garden.
	outside communication with internet more secure/scrutinized

LAN (Local area network )- Home computer network. (less than hundred devices connected)
	

ip - unique identifier of every device that is connected to internet

	8 billion = < 1 device ( phone, laptop, tablet, smart watch )
	100 billions connected to internet - each should have unique ip
		IPv4 = 0-255 . 0-255 . 0-255 . 0-255
			4 octet/ subnet
				123.25.67.234
				4.2 billion unique IPv4 address = 256 X 256 X 256 X 256
		IPv6	= 8 sequence (pair of 4 characters )
			xxxx : xxxx : xxxx : xxxx : xxxx : xxxx : xxxx : xxxx 
			0-9 a b  c d e f - hexadecimal
			95ae : xxxx : xxxx : xxxx : xxxx : xxxx : xxxx : xxxx 
			(16^4 ) ^8
			trillions of trillions of IPv6 addresses

port/socket - unique identifier of internet softwares running on a machine
	port - allows entrance into a device
		Flight - airport port of entry
		ship - docker port of entry
	Individual port is assigned to each internet software running on the device
	0-65535

dhcp  - provides unique ip address
dns - domain name server
router - pathway between 2 end point
load balancer - 

ipconfig - show my lan ip address
netstat -a - show all ports open
ping - remote machine is reachable and response time (round trip time)
telnet - website software is open on remote aws machine
tracert - find delay in the network (trace route)



Communication - IP and port

http://www.google.com/
	machine contact DNS and get ip for www.google.com - 1.2.3.4
1.2.3.4 80

DNS - Web ip address contact (just like phone contact)
	DNS - translation from domain name(www.google.com) to the IP address
www.google.com 1.2.3.4
www.facebook.com 2.3.4.5
www.amazon.com 4.5.6.7


Contact name - contact phone
john - 1231231231
jane - 2342342342
mike - 3453453453

call john

source
	1 hop - 10 mile on xyz road
	1 hop - take left 5 mile on abc road
	1 hop - take right 20 mile on pqr road ( slight delay )
	1 hop - take left 5 mile on www road
destination




************* xml *******************
john doe asdad asda asdsad asd asda 123234 adasd 23432423423
meta-data.. infor about infor
Strictly typed language
represents Complex data
Validation = Mandatory info in this file/ data type validation
	doc type
	xsd
elements = <>
	<Company>
		<person age="12" >
			<firstName>john</firstName> 
			<lastname>doe</lastname> 
			<address>
				<street>asdasda </street>
				<city>asdsad a312</city> 
				<zip>123</zip>
			</address>
		</person>
		<person age="12" >
			<firstName>jane</firstName> 
			<lastname>doe</lastname> 
			<address>
				<street>dasd </street>
				<city>qwe a312</city> 
				<zip>234</zip>
			</address>
		</person>
	</Company>
	1) opened element must be closed (open and close tags / )
	2) no space in name of element
	3) nested elements
		root - first eleemnt in xml file
		parent  - top element in nested xml format
		child - bottom element in nested xml format
		sibling - adjacent elements inside parent element
attributes = indivisible info, key value pair



root eleemnt
parent/child/sibling eleemnt
element value
attributes




********* html *******
Browser - 
	communicates over http on the internet. (sends request to  AWS machine and receive html code as response)
	Convert html code into Graphical and textual display on the screen
	
	Text - Html code 
	Grapics - CSS programs 
	layout - CSS programs
************* event listener **********

events : activity triggered by customer actions
	standard inputs : 
		keyboard - type, press, release
		mouse - move mouse, click, double click
events listeners : 
	css : 
		hover - mouse positioned over certain html eleemnts
		active - on click of focus of certain html elements


margin and padding- spacing between html elements

********** javascript **********
JAVA VERSUS JAVASCRIPT OBJECT

Javascript Object
var student={
		name : "john",
		age : 10,
		grade : 2,
		learn : function(  ){
			console.log("attending class");
		}
		
	};
console.log(student.name);
student.learn();
	
Java Object
public class student{
	String name = "john";
	int age=10;
	int grade =2;
	public void learn(){
		System.out.println("attending class");
	}
}

onkeypress



********* CONTROL PASS FROM HTML TO JAVASCRIPT ***********
Using event listeners in html field you can call javascript functions


********* HOW TO ACCESS HTML VALUES FROM JAVASCRIPT *******
document.getElementById(" id attribute in target html field") . value







****************** jquery *****************
html + javascript - tightly coupled
	event listeners in html code
	onclick, onblur = invoke javascript functions
	
	cons : developers working on HTML and javascript
	
html + jquery  - loosely coupled
	no javascript code written in HTML program
	decoupled - html and javascript
	
	
<div id="parent">
	<div id="son"> hi hello </div>
<div>

$("#parent").html(); = html elements
$("#son").text(); =  hi hello (not elements)
$("#user").val(); = access customer typed
					value
					
	overloaded
	no parameter - READING values
	val()
	with parameter - WRITING values
	val("hi");
	
	
	
document.getElementById( "user")
$("#user")
	
*********************** Http ********************
Hyper link
HTML - Hyper Text Markup language

HTTP - Hyper Text Transfer protocol
FTP - File Transfer protocol
SMTP - Simple Mail transfer protocol

UPS/USPS/Fedex

HTTP - Transporting/ courier service to move digital data over the internet
	digital data - 
		Text - alphabetical/numerical data
		binary - image/ video/ audio/ executable files 

Http 
	Header - Digital data transfer informatino - source/destincation/ weight
			content type/ additional instructions etc
	Body- digital payload . text data or binary data such as image/video/ etc
	
	1 Http Transaction 
	Request - Client program sends request.
			Clients side technology - HTML/ JS/ Mobile app
	Response - Server program responds
	
	HTTP methods
		get - 
		post - 
		
	
**************** Data transfer / request generation from client **********

	synchronous - customer voluntary submission from customer browser to server
			clicking SUBMIT button
			
		BROWSER DOES ALL THIS	
			1) Current page - domain name = http://localhost
			2) form action - part of url = /login
			3) Inside form element all name attributes and customer input is paired
				user=john123&pwd=abc123
				
			1+2+?+3 = url 
			http://localhost/login?user=john123&pwd=abc123
			http://localhost/login?user=john123&pwd=abc123
			
			
	http://localhost/login?user=john123&pwd=abc123
	http = port in the website machine (80)
	localhost = machine location (ip address of website machine)		
	/login = alias to java program
	
			
	asynchronous - automated involunatry data submission from customer browser to server
			Event listenter / javascript / ajax
			
	ajax= asynchronous Java script xml
	
	xhr = xml http request
	
	
	Jquery has a method to make ajax calls = ".ajax"
	input to this .ajax method = javascript object
	javscript object has = variable and methods
		variable
			url :  "http://localhost/login" destination where you want to transfer(mandatory)
			type : "get/post"			method/mode of transfer
			data :  "user=john123&pwd=abc123" payload, data/content to be transferred
	
			success : code executed if the asynch call is successfull
			error : code executed if the asynch call is failure
			
	var loginAttemptCheck={
	        url: '/shoeInterest',
	        type: 'get',
		data : "userid=john&pwd=john1!",
	        context: this,
		success: function (data) {
				if your call to server succeeds.. what to do next
		        },
	        error: function (data) {
	        	if your call to server fails.. what to do next
	        }
	};
	
	$.ajax(  loginAttemptCheck  );
	
********************** JSON ******************

limitation in browser submit server call
	Key=value pair (simple data)
	address=adasdsad asdsad asda adssa dasdasdas
	
ajax server call
	key=value
	xml = complex data
	<address>
		<street>asdassad
		<city>asdad
		<state>sadad
		<country>asdasd
	</address>
		
JSON - transfer complex data between client and server
	json object = (String version/representation of javascript object)
	var jsonObj="address" : {
		"street": "asdassad",
		"city":true,
		"state":123,
		"country":"asdasd",
		"phone": [ 123123123,2342342342   ]
	}
	var jsobj=JSON.parse(jsonObj);( CONVERTS JSON OBJECT INTO JAVASCRIPT OBJECT)
	
	javascript object
	var jsobj=address : {
		street: "asdassad",
		city:true,
		state:123,
		country:"asdasd",
		phone: [ 123123123,2342342342   ]
	}
	var jsonObj=JSON.stringify(jsobj); ( CONVERTS JAVSCRIPT OBJECT INTO JSON OBJECT)
	
	
	
*************** servlet **************

Who creates servlet java object = Tomcat web server software
Who calls doGet or doPost = doService method in the servlet
Who gives request / response object = tomcat creates req/res object gives it to service method
			service method gives it to doget or dopost methods

Tomcat - Web server software

Spring boot war file includes - html/css/js/java/tomcat programs


Servlet
	init - override is optional ( called only once when servlet object is created)
		program setup or initialization code is written here
	doGet - override is mandatory
	doPost - override is mandatory
	doService - override NEVER
		every time a request comes to your servlet
	destroy - override is optional server shuts down ( servlet object is destroyed )

Response type category
	webpage
		redirect
		forward
	text/binary : text message, image, video
		response.getWriter - text response (Character/text stream)
		response.getoutputstream  - image/video ( binary stream)
	
Http Sessions
	HTTP is a stateless protocol 
	State - context of converstation between 2 party
	get Customer session = req.getSession()
	read information stored in customer session= getAttribute()
	write information in customer sesssion = setAttribute(name,value);
		Session table = key / value pair.. key is String.. value can be any Object(primtive/complex objects)
			String = 123/true/arraylist/String

Request methods


Response methods

	
status code
	200 : request succesfull.
	3XX : request redirect
	4XX : request not available/unauthorized
	5XX : server had a problem ( server program had error/exception)
	
	
https://github.com/LibrePDF/OpenPDF.git




